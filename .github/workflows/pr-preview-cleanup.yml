name: PR Preview Cleanup

on:
  pull_request:
    types: [closed]
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

concurrency:
  group: "pr-preview-cleanup-${{ github.event.pull_request.number }}"
  cancel-in-progress: false

jobs:
  cleanup:
    name: Cleanup PR Preview
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout gh-pages branch
      uses: actions/checkout@v4
      with:
        ref: gh-pages
        fetch-depth: 0
        
    - name: Remove PR preview directory
      run: |
        PR_NUMBER="${{ github.event.pull_request.number }}"
        PR_DIR="pr-${PR_NUMBER}"
        
        echo "Cleaning up preview for PR #${PR_NUMBER}"
        
        if [ -d "$PR_DIR" ]; then
          echo "Removing directory: $PR_DIR"
          rm -rf "$PR_DIR"
          
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Commit the removal
          git add .
          git commit -m "üóëÔ∏è Cleanup: Remove PR #${PR_NUMBER} preview" || echo "No changes to commit"
          git push origin gh-pages
          
          echo "‚úÖ Successfully removed PR preview directory"
        else
          echo "‚ÑπÔ∏è No preview directory found for PR #${PR_NUMBER}"
        fi
        
    - name: Comment on PR about cleanup
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = context.payload.pull_request.number;
          const wasRemoved = true; // We could check if directory existed in previous step
          
          if (wasRemoved) {
            const commentBody = `## üóëÔ∏è PR Preview Cleaned Up
            
            The preview deployment for this PR has been automatically removed.
            
            Thank you for your contribution! üéâ
            
            ---
            *This comment was automatically generated by the PR Preview Cleanup workflow.*`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: commentBody
            });
          }
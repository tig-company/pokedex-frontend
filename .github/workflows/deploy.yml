name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Build with Next.js
      run: npm run build
      env:
        NODE_ENV: production
        GITHUB_PAGES: true
        
    - name: Add .nojekyll file
      run: touch out/.nojekyll
      
    - name: Download existing site
      continue-on-error: true
      run: |
        echo "Downloading existing GitHub Pages content..."
        curl -L -o site.tar.gz https://github.com/${{ github.repository }}/archive/gh-pages.tar.gz || echo "No existing gh-pages branch found"
        if [ -f site.tar.gz ]; then
          mkdir -p temp-site
          tar -xzf site.tar.gz -C temp-site --strip-components=1 || echo "Failed to extract"
          rm -f site.tar.gz
        fi
        
    - name: Prepare main site deployment
      run: |
        echo "Preparing main site deployment"
        
        # Create deployment directory structure
        mkdir -p deploy-site
        
        # Copy existing PR previews if they exist
        if [ -d "temp-site" ]; then
          # Copy only PR preview directories (pr-*) and preserve them
          find temp-site -maxdepth 1 -name "pr-*" -type d -exec cp -r {} deploy-site/ \; || echo "No PR previews to preserve"
        fi
        
        # Copy built main application to root
        cp -r out/* deploy-site/
        
        # Ensure root .nojekyll exists
        touch deploy-site/.nojekyll
        
        echo "Deployment structure:"
        find deploy-site -maxdepth 2 -type f | head -20
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./deploy-site
        force_orphan: false
        keep_files: false